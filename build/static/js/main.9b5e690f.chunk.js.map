{"version":3,"sources":["organisms/Frame/index.styles.js","organisms/Frame/index.js","pages/Player/index.styles.js","pages/Player/index.js","App.js","reportWebVitals.js","index.js"],"names":["Frame","styled","frame","rest","file","index","totalSeconds","React","memo","Wrapper","div","FramePreview","Screen","FrameDot","totalTime","Timeline","PlayingDot","currentTime","hour","minute","second","Toolbar","ActionButton","button","Timer","Player","episode","frames","useRef","useState","setCurrentTime","intervalId","setIntervalId","lastTime","screenRef","stringifyTime","time","toString","padStart","renderFrame","useCallback","useEffect","sortedFrames","ep1","sort","a","b","current","at","ref","map","onClick","clearInterval","id","setInterval","currTime","nextTime","nextFrame","find","f","indexOf","scrollTo","top","left","behavior","defaultProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9b5e690f.chunk.js","sourcesContent":["import styled from 'styled-components'\n\n\nexport const Frame = styled(({ frame, ...rest }) => <div {...rest} />)`\n  width: 100%;\n  height: 40rem;\n  background-image: url(${ ({ frame }) => frame.file });\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: contain;\n  position: relative;\n`\n","import React from 'react';\nimport propTypes from 'prop-types'\nimport * as Styled from './index.styles'\n\nconst Frame = ({ frame, index }) => <Styled.Frame key={`frame-${frame?.totalSeconds}`} frame={frame} index={index} />\n\nFrame.propTypes = {\n  frame: propTypes.shape().isRequired,\n  index: propTypes.number.isRequired\n}\n\nexport default React.memo(Frame)","import styled from 'styled-components'\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  min-height: 40rem;\n  background-color: #313131;\n  color: #ffffff;\n  display: flex;\n  flex-direction: column;\n  font-family: industry, sans-serif;\n`\n\nexport const FramePreview = styled(({ frame, ...rest }) => <div {...rest} />)`\n  display: none;\n  width: 20rem;\n  height: 8rem;\n  background-image: url(${({frame}) => frame.file});\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: contain;\n  position: relative;\n  top: -8.5rem;\n  left: -10rem;\n`\nexport const Screen = styled.div`\n  width: 100%;\n  height: 40rem;\n  position: relative;\n  overflow: hidden;\n`\n\nexport const FrameDot = styled(({ frame, totalTime, ...rest }) => <div {...rest} />)`\n  position: relative;\n  left: ${({ totalTime, frame }) => (frame.totalSeconds * 90) / totalTime}%;\n  background-color: #ffffff;\n  border-radius: .2rem;\n  height: .4rem;\n  width: .4rem;\n  cursor: pointer;\n\n  :hover {\n    ${FramePreview} {\n      display: block;\n    }\n  }\n`\n\nexport const Timeline = styled.div`\n  height: .5rem;\n  width: 100%;\n  background-color: #888888;\n  display: flex;\n  align-content: center;\n  align-items: center;\n\n  :first-child {\n    left: -.2rem;\n  }\n`\n\nexport const PlayingDot = styled(({ currentTime, totalTime, ...rest }) => <div {...rest} />)`\n  position: relative;\n  top: -.5rem;\n  left: ${({ totalTime, currentTime }) => (currentTime.hour * 60 * 60 + currentTime.minute * 60 + currentTime.second) * 100 / totalTime}%;\n  background-color: #F5A73D;\n  height: 1rem;\n  width: .2rem;\n  transition: all 1s linear;\n`\n\nexport const Toolbar = styled.div`\n  background-color: #000000;\n  width: 100%;\n  height: 3rem;\n  display: flex;\n  align-items: center;\n  align-content: center;\n`\n\nexport const ActionButton = styled.button`\n  padding: 0;\n  border: 0;\n  background: transparent;\n  color: inherit;\n  font-size: 1rem;\n  margin-left : 1rem;\n  cursor: pointer;\n`\n\nexport const Timer = styled.div`\n  margin-left: 2rem;\n  font-size: .8rem;\n`","import React from 'react';\nimport propTypes from 'prop-types'\nimport Frame from '../../organisms/Frame'\nimport ep1 from '../../frames/ep1.json'\n\nimport * as Styled from './index.styles'\n\nconst Player = ({ episode }) => {\n  const frames = React.useRef([]);\n  const [currentTime, setCurrentTime] = React.useState({ hour: 0, minute: 0, second: 0 })\n  const [intervalId, setIntervalId] = React.useState(null)\n  const lastTime = React.useRef({ hour: 0, minute: 0, second: 0, totalSeconds: 0 });\n  const screenRef = React.useRef(null)\n\n  const stringifyTime = (time) => {\n    return `${time.hour.toString().padStart(2, '0')}:${time.minute.toString().padStart(2, '0')}:${time.second.toString().padStart(2, '0')}`\n  }\n  const startPlayer = () => {\n    const id = setInterval(() => {\n      setCurrentTime(currTime => {\n        const nextTime = {\n          second: currTime.second === 59 ? 0 : currTime.second + 1,\n          minute: currTime.second === 59 ? currTime.minute + 1 : currTime.minute,\n          hour: currTime.second === 59 && currTime.minute === 59 ? currTime.hour + 1 : currTime.hour\n        }\n        const nextFrame = frames.current.find(f => f.hour === nextTime.hour && f.minute === nextTime.minute && f.second === nextTime.second)\n        if (nextFrame) {\n          const index = frames.current.indexOf(nextFrame)\n          screenRef.current.scrollTo({\n            top: index * 640,\n            left: 0,\n            behavior: 'smooth'\n          });\n        }\n        return nextTime\n      })\n    }, 1000)\n    setIntervalId(id)\n  }\n\n  const pausePlayer = () => {\n    clearInterval(intervalId)\n    setIntervalId(null);\n  }\n\n  const renderFrame = React.useCallback((frame, index) => <Frame key={`frame-${frame?.totalSeconds}`} frame={frame} index={index} />, [])\n\n\n  React.useEffect(() => {\n    const sortedFrames = ep1.sort((a, b) => a.totalSeconds > b.totalSeconds ? 1 : -1)\n    frames.current = sortedFrames\n    lastTime.current = sortedFrames.at(-1)\n  }, []);\n\n  return <Styled.Wrapper>\n    <Styled.Screen ref={screenRef}>\n      { frames.current.map((frame, index) => renderFrame(frame, index))}\n    </Styled.Screen>\n    <Styled.Timeline>\n      {frames.current.map(frame => <Styled.FrameDot frame={frame} totalTime={lastTime.current.totalSeconds} key={`dot-${frame.totalSeconds}`} onClick={() => setCurrentTime(frame)}>\n        <Styled.FramePreview frame={frame} />\n      </Styled.FrameDot>)}\n    </Styled.Timeline>\n    <Styled.PlayingDot currentTime={currentTime} totalTime={lastTime.current.totalSeconds} />\n    <Styled.Toolbar>\n      {!intervalId ?\n        <Styled.ActionButton onClick={startPlayer}>&gt; Play</Styled.ActionButton>\n        :\n        <Styled.ActionButton onClick={pausePlayer}>|| Pause</Styled.ActionButton>\n      }\n      <Styled.Timer>{stringifyTime(currentTime)} of {stringifyTime(lastTime.current)}</Styled.Timer>\n    </Styled.Toolbar>\n  </Styled.Wrapper>\n}\n\nPlayer.propTypes = {\n  episode: propTypes.string\n}\n\nPlayer.defaultProps = {\n  episode: 'ep1'\n}\n\nexport default Player;","import Player from './pages/Player'\n\nfunction App() {\n  return (<Player />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}